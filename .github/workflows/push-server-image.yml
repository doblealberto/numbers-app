
name: push server


on:
  push:
    branches:
      - prod
      - dev
      - staging

    paths:
        - 'server/**'
        - '!docker-compose.yml'
        - '!nginx/**'
        - '!client/**'
        - '!.github/**'
        - '!README.md'
        - '!.gitignore'

jobs:

  detect-server:
    runs-on: ubuntu-latest  # windows-latest | macos-latest
    name: Detects changes into server

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.
      - name: Get changed files in the docs folder
        id: changed-files-specific
        uses: tj-actions/changed-files@v29.0.7
        with:
          files: |
            server/**

      - name: Run step if any file(s) in the docs folder change
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
         echo "Files change in server"

################################################################
######################## Checkout Code #########################
################################################################
      - name: Checkout
        uses: actions/checkout@v3


################################################################
################### Configure AWS credentials ##################
################################################################

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

# ################################################################
# ######################## Login to ECR  #########################
# ################################################################

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1


# ################################################################
# ######################## Generate SHA  #########################
# ################################################################

      - name: Generate sha
        id: generate_sha
        run: |
          SHA=$(echo $GITHUB_SHA)
          echo "::set-output name=sha::$SHA"

# ################################################################
# ###################### BUILD and push image ####################
# ################################################################
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: "${{ steps.login-ecr.outputs.registry }}"
          ECR_REPOSITORY: "final-challenge-test-1-${{ github.ref_name }}-frontend-image"
          IMAGE_TAG: ${{ steps.generate_sha.outputs.sha }}
        working-directory: ./server
        run: |
          
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

#############################################################
########## Deploy to ecs full workflow ######################
#############################################################
      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition  final-challenge-test-1-${{ github.ref_name }}-api --query taskDefinition > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: api
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: final-challenge-test-1-${{ github.ref_name }}-api
          cluster: final-challenge-test-1-${{ github.ref_name }}-cluster
          wait-for-service-stability: true

